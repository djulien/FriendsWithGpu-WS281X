http://www.shaderific.com/glsl-functions/
https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glDrawPixels.xml
http://www.harborfreight.com/8-in-5-speed-bench-drill-press-60238.html
http://www.harborfreight.com/1-2-half-inch-jacobs-keyed-chuck-45731.html
http://www.northerntool.com/shop/tools/product_200234874_200234874
https://github.com/djulien/FriendsWithGpu-WS281X

SDL2:
https://raspberrypi.stackexchange.com/questions/42628/has-anyone-managed-to-get-sdl-2-3-working-without-x-in-raspbian
** https://solarianprogrammer.com/2015/01/22/raspberry-pi-raspbian-getting-started-sdl-2/
 sudo apt-get update
 sudo apt-get upgrade
 sudo apt-get install build-essential libfreeimage-dev libopenal-dev libpango1.0-dev libsndfile-dev libudev-dev libasound2-dev libjpeg8-dev libtiff5-dev libwebp-dev automake
 cd ~
 wget https://www.libsdl.org/release/SDL2-2.0.5.tar.gz
 tar zxvf SDL2-2.0.3.tar.gz
 cd SDL2-2.0.5 && mkdir build && cd build
 #PI-1 ../configure --disable-pulseaudio --disable-esd --disable-video-mir --disable-video-wayland --disable-video-x11 --disable-video-opengl
 ../configure --host=armv7l-raspberry-linux-gnueabihf --disable-pulseaudio --disable-esd --disable-video-mir --disable-video-wayland --disable-video-x11 --disable-video-opengl  #PI 2
 make -j 4
 sudo make install
 g++ -o program_name program_name.cpp `sdl2-config --cflags --libs`

maybe useful SR for phase 3:
BU2152FS (too slow, but works with 3.3V?)
http://media.digikey.com/PDF/Data%20Sheets/Rohm%20PDFs/BU2152FS.pdf
74F675A (16-bit but fast enough and works with 3.3V?)
http://www.mouser.com/ds/2/308/74f675a-1116668.pdf
STP24DP05 
http://www.st.com/en/power-management/stp24dp05.html


TODO: file gcc bug report:
1.
src/DataCanvas.cpp:605:55:   required from here
src/DataCanvas.cpp:487:73: internal compiler error: in emit_mem_initializers, at cp/init.c:1098
 auto_ptr(DataType* that): auto_ptr<DataType, void>(that), data(*that) {}; //mak
                                                                     ^
Please submit a full bug report,
with preprocessed source if appropriate.
See <file:///usr/share/doc/gcc-5/README.Bugs> for instructions.
Makefile:35: recipe for target 'all' failed
make: *** [all] Error 1


2.
    void stats()
    {
//        uint64_t elapsed = now() - started, freq = SDL_GetPerformanceFrequency(); //#ticks/second
//        uint64_t unknown_time = elapsed - caller_time - pivot_time - update_time - unlock_time - copy_time - present_time; //unaccounted for; probably function calls, etc
        uint64_t idle_time = isRPi()? bg.present_time: fg.unlock_time; //kludge: V-sync delay appears to be during unlock on desktop
        double elaps = elapsed(started), fps = numfr / elaps;
//#define avg_ms(val)  (double)(1000 * (val)) / (double)freq / (double)numfr //(10.0 * (val) / freq) / 10.0) //(double)caller_time / freq / numfr
//#define avg_ms(val)  (elapsed(now() - (val)) / numfr)  //ticks / freq / #fr
//GCC BROKEN #define avg_ms(val)  (double)(1000 * (val) / SDL_TickFreq()) / (double)numfr //(10.0 * (val) / freq) / 10.0) //(double)caller_time / freq / numfr
//comma missing between usages of avg_ms gives misleading msg about macro
        myprintf(12, YELLOW_LT "#fr %d, #err %d, elapsed %2.1f sec, %2.1f fps: %2.1f msec: fg(caller %2.3f + pivot %2.3f + lock %2.3f + update %2.3f + unlock %2.3f), bg(copy %2.3f + present %2.3f), %2.1f%% idle" ENDCOLOR, numfr, numerr, elaps, fps, 1000 / fps, avg_ms(fg.caller_time), avg_ms(fg.pivot_time), avg_ms(fg.lock_time), avg_ms(fg.update_time), avg_ms(fg.unlock_time) avg_ms(bg.copy_time), avg_ms(bg.present_time), (double)100 * idle_time / elaps);
        myprintf(22, BLUE_LT "raw: elapsed %lld, freq %lld, fg(caller %lld, pivot %lld, lock %lld, update %lld, unlock %lld), bg(copy %lld, present %lld), elapsed %lld, freq %lld" ENDCOLOR, now() - started, SDL_TickFreq(), fg.caller_time, fg.pivot_time, fg.lock_time, fg.update_time, fg.unlock_time, bg.copy_time, bg.present_time);
    }
